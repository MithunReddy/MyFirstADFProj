{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "MyFakeProject"
		},
		"LS_MyFakeProjDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'LS_MyFakeProjDatabricks'"
		},
		"ls_myfakeproj_copy_few_files_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_myfakeproj_copy_few_files'"
		},
		"ls_myfakeproj_copy_few_files_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dbpractise.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_MyFakeProjDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-8938395096656663.3.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LS_MyFakeProjDatabricks_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_myfakeproj_copy_few_files')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_myfakeproj_copy_few_files_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_myfakeproj_copy_few_files_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyIndividualFileInLoop')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_myfakeproj_copy_few_files",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "raw",
						"fileSystem": "adf-fakeproj"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "STATE_UT_NAME",
						"type": "String"
					},
					{
						"name": "DISTRICT",
						"type": "String"
					},
					{
						"name": "JAN",
						"type": "String"
					},
					{
						"name": "FEB",
						"type": "String"
					},
					{
						"name": "MAR",
						"type": "String"
					},
					{
						"name": "APR",
						"type": "String"
					},
					{
						"name": "MAY",
						"type": "String"
					},
					{
						"name": "JUN",
						"type": "String"
					},
					{
						"name": "JUL",
						"type": "String"
					},
					{
						"name": "AUG",
						"type": "String"
					},
					{
						"name": "SEP",
						"type": "String"
					},
					{
						"name": "OCT",
						"type": "String"
					},
					{
						"name": "NOV",
						"type": "String"
					},
					{
						"name": "DEC",
						"type": "String"
					},
					{
						"name": "ANNUAL",
						"type": "String"
					},
					{
						"name": "Jan-Feb",
						"type": "String"
					},
					{
						"name": "Mar-May",
						"type": "String"
					},
					{
						"name": "Jun-Sep",
						"type": "String"
					},
					{
						"name": "Oct-Dec",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_myfakeproj_copy_few_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InitialFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_myfakeproj_copy_few_files",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw",
						"fileSystem": "adf-fakeproj"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_myfakeproj_copy_few_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkCopyMultipleFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_myfakeproj_copy_few_files",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "zconsolidatedfinalcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_myfakeproj_copy_few_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_myfakeproj_copy_few_files",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "inprocess",
						"fileSystem": "adf-fakeproj"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_myfakeproj_copy_few_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataSetForCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_myfakeproj_copy_few_files",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "inprocess",
						"fileSystem": "taskbyyashwanth"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_myfakeproj_copy_few_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceCopyMultipleFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_myfakeproj_copy_few_files",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_myfakeproj_copy_few_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceRawDataSetForCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_myfakeproj_copy_few_files",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YashTask"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cities_r2_open.csv",
						"folderPath": "raw",
						"fileSystem": "taskbyyashwanth"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name_of_city",
						"type": "String"
					},
					{
						"name": "state_code",
						"type": "String"
					},
					{
						"name": "state_name",
						"type": "String"
					},
					{
						"name": "dist_code",
						"type": "String"
					},
					{
						"name": "population_total",
						"type": "String"
					},
					{
						"name": "population_male",
						"type": "String"
					},
					{
						"name": "population_female",
						"type": "String"
					},
					{
						"name": "0-6_population_total",
						"type": "String"
					},
					{
						"name": "0-6_population_male",
						"type": "String"
					},
					{
						"name": "0-6_population_female",
						"type": "String"
					},
					{
						"name": "literates_total",
						"type": "String"
					},
					{
						"name": "literates_male",
						"type": "String"
					},
					{
						"name": "literates_female",
						"type": "String"
					},
					{
						"name": "sex_ratio",
						"type": "String"
					},
					{
						"name": "child_sex_ratio",
						"type": "String"
					},
					{
						"name": "effective_literacy_rate_total",
						"type": "String"
					},
					{
						"name": "effective_literacy_rate_male",
						"type": "String"
					},
					{
						"name": "effective_literacy_rate_female",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "total_graduates",
						"type": "String"
					},
					{
						"name": "male_graduates",
						"type": "String"
					},
					{
						"name": "female_graduates",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_myfakeproj_copy_few_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MultipleContainersCopyAtOnce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"fileListPath": "zconsolidatedfinalcontainer/output/fileslist.txt",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceCopyMultipleFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkCopyMultipleFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceCopyMultipleFiles')]",
				"[concat(variables('factoryId'), '/datasets/SinkCopyMultipleFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loadfiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InitialFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@take(activity('Get Metadata').output.childItems,3)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Individual File From Loop",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CopyIndividualFileInLoop",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SinkDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-23T18:08:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InitialFiles')]",
				"[concat(variables('factoryId'), '/datasets/CopyIndividualFileInLoop')]",
				"[concat(variables('factoryId'), '/datasets/SinkDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SourceRawDataSetForCopy",
								"type": "DatasetReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkDataSetForCopy",
								"type": "DatasetReference"
							},
							"name": "SinkSave",
							"rejectedDataLinkedService": {
								"referenceName": "ls_myfakeproj_copy_few_files",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "SelectMinimalColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          name_of_city as string,",
						"          state_code as string,",
						"          state_name as string,",
						"          dist_code as string,",
						"          population_total as string,",
						"          population_male as string,",
						"          population_female as string,",
						"          {0-6_population_total} as string,",
						"          {0-6_population_male} as string,",
						"          {0-6_population_female} as string,",
						"          literates_total as string,",
						"          literates_male as string,",
						"          literates_female as string,",
						"          sex_ratio as string,",
						"          child_sex_ratio as string,",
						"          effective_literacy_rate_total as string,",
						"          effective_literacy_rate_male as string,",
						"          effective_literacy_rate_female as string,",
						"          location as string,",
						"          total_graduates as string,",
						"          male_graduates as string,",
						"          female_graduates as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Source",
						"Source select(mapColumn(",
						"          name_of_city,",
						"          state_code,",
						"          state_name,",
						"          dist_code,",
						"          population_total,",
						"          population_male,",
						"          population_female,",
						"          location",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectMinimalColumns",
						"SelectMinimalColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['processedfile.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     partitionBy('hash', 1)) ~> SinkSave"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceRawDataSetForCopy')]",
				"[concat(variables('factoryId'), '/datasets/SinkDataSetForCopy')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_myfakeproj_copy_few_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/yash_task_data_clean')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Source": {},
									"SinkSave": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/mithun.ade1@hotmail.com/YashTask/CleanData"
						},
						"linkedServiceName": {
							"referenceName": "LS_MyFakeProjDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "YashTask"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_MyFakeProjDatabricks')]"
			]
		}
	]
}